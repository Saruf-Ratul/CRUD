{"version":3,"file":"toolbar.d.ts","sources":["toolbar.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, ElementRef, QueryList } from '@angular/core';\nimport { CanColor } from '@angular/material/core';\n/** @docs-private */\ndeclare const _MatToolbarBase: import(\"@angular/material/core/common-behaviors/constructor\").Constructor<CanColor> & import(\"@angular/material/core/common-behaviors/constructor\").AbstractConstructor<CanColor> & {\n    new (_elementRef: ElementRef): {\n        _elementRef: ElementRef;\n    };\n};\nexport declare class MatToolbarRow {\n}\nexport declare class MatToolbar extends _MatToolbarBase implements CanColor, AfterViewInit {\n    private _platform;\n    private _document;\n    /** Reference to all toolbar row elements that have been projected. */\n    _toolbarRows: QueryList<MatToolbarRow>;\n    constructor(elementRef: ElementRef, _platform: Platform, document?: any);\n    ngAfterViewInit(): void;\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    private _checkToolbarMixedModes;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nexport declare function throwToolbarMixedModesError(): void;\nexport {};\n"]}